{
    "openapi": "3.0.3",
    "info": {
        "title": "Serena Backend",
        "description": "Serena Backend API docs",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Get accessToken from register or login routes",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ReturnedUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "username": {
                        "type": "string",
                        "description": "User name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email"
                    }
                },
                "example": {
                    "id": "5f9e1b7b9b0b3e2b9c3f3b1a",
                    "username": "test",
                    "email": "test@gmail.com"
                }
            },
            "HttpError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Missing email"
                    },
                    "status": {
                        "type": "number",
                        "example": 400
                    }
                }
            },
            "SafeUserResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "JWT token to be used for further requests",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJhOTIxNTk2NC1lOGM3LTRkOTgtODI4ZC1mNGIxODU1OTE1ODciLCJpYXQiOjE3MDA2Njk5MjQsImV4cCI6MTcwMzI2MTkyNH0.uPe7Z3L27UW1356YeWrNnzzc8WQrBMAG59ePOzThX2I"
                    },
                    "userId": {
                        "type": "string",
                        "example": "5f9e1-b9b0b3e2b9c3f3b1a-5f9e1b7b9b0b31a"
                    }
                }
            },
            "SerenPlaceProduct": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Product id",
                        "example": "5f9e1b7b9b0b3e2b9c3f3b1a"
                    },
                    "name": {
                        "type": "string",
                        "description": "Product name",
                        "example": "Serena Oil"
                    },
                    "price_idr": {
                        "type": "integer",
                        "description": "Product price in IDR",
                        "example": 100000
                    },
                    "description": {
                        "type": "string",
                        "description": "Product description",
                        "example": "Serena Oil 10ml"
                    },
                    "stock": {
                        "type": "integer",
                        "description": "Product stock",
                        "example": 10
                    },
                    "image_name": {
                        "type": "string",
                        "description": "Product image name",
                        "example": "serena-oil.jpg"
                    },
                    "type": {
                        "type": "string",
                        "description": "OIL or DEVICE",
                        "example": "OIL"
                    }
                }
            },
            "SerenPlaceProducts": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SerenPlaceProduct"
                }
            },
            "UserEmotion": {
                "type": "object",
                "properties": {
                    "energetic": {
                        "type": "object",
                        "properties": {
                            "anger": {
                                "type": "number",
                                "example": 0.3
                            },
                            "fear": {
                                "type": "number",
                                "example": 0.2
                            },
                            "surprise": {
                                "type": "number",
                                "example": 0.2
                            },
                            "total": {
                                "type": "number",
                                "example": 0.7
                            }
                        }
                    },
                    "relax": {
                        "type": "object",
                        "properties": {
                            "disgust": {
                                "type": "number",
                                "example": 0.075
                            },
                            "joy": {
                                "type": "number",
                                "example": 0.075
                            },
                            "neutral": {
                                "type": "number",
                                "example": 0.075
                            },
                            "sadness": {
                                "type": "number",
                                "example": 0.075
                            },
                            "total": {
                                "type": "number",
                                "example": 0.3
                            }
                        }
                    }
                }
            },
            "UserEmotionServerData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserEmotion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "User emotion id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "userId": {
                                "type": "string",
                                "description": "User id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "created_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "User emotion created date",
                                "example": "2022-01-01T00:00:00.000Z"
                            },
                            "user_photo": {
                                "type": "string",
                                "description": "User photo path",
                                "example": "users/1982939/emotions/user.jpg"
                            }
                        }
                    }
                ]
            },
            "MusicRecommendation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "6nek1Nin9q48AVZcWs9e9D"
                    },
                    "title": {
                        "type": "string",
                        "example": "The Hours"
                    },
                    "artist": {
                        "type": "string",
                        "example": "Beach House"
                    },
                    "album": {
                        "type": "string",
                        "example": "Bloom"
                    },

                    "release_year": {
                        "type": "string",
                        "example": "2012"
                    },
                    "cover_image": {
                        "type": "string",
                        "example": "https://i.scdn.co/image/ab67616d0000b273e3b6b8f9b7f6b8f9b7f6b8f9"
                    },
                    "preview_link": {
                        "type": "string",
                        "example": "https://p.scdn.co/mp3-preview/1b7f6b8f9b7f6b8f9b7f6b8f9b7f6b8f9"
                    }
                }
            },
            "MusicRecommendations": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/MusicRecommendation"
                }
            },
            "SerenBoxData": {
                "type": "object",
                "properties": {
                    "credentials": {
                        "type": "string",
                        "description": "SerenBox credentials",
                        "example": "00:0a:95:9d:68:16"
                    },
                    "name": {
                        "type": "string",
                        "description": "SerenBox name",
                        "example": "My SerenBox"
                    }
                }
            },
            "SerenBoxServerData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SerenBoxData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "SerenBox id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "userId": {
                                "type": "string",
                                "description": "User id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "added": {
                                "type": "string",
                                "description": "SerenBox added date",
                                "example": "2020-10-31T00:00:00.000Z"
                            },
                            "slotAId": {
                                "type": "string",
                                "description": "Slot A product id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "slotBId": {
                                "type": "string",
                                "description": "Slot B product id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "image_name": {
                                "type": "string",
                                "description": "SerenBox image name",
                                "example": "serenbox.jpg"
                            },
                            "ip_address": {
                                "type": "string",
                                "description": "SerenBox IP address",
                                "example": "192.0.31.34"
                            }
                        }
                    }
                ]
            },
            "SerenBoxSlotStatus": {
                "type": "object",
                "properties": {
                    "serenBoxId": {
                        "type": "string",
                        "description": "SerenBox id",
                        "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                    },
                    "slotA": {
                        "type": "string",
                        "enum": [true, false],
                        "example": true
                    },
                    "slotB": {
                        "type": "string",
                        "enum": [true, false],
                        "example": false
                    }
                }
            },
            "SerenBoxSessionData": {
                "type": "object",
                "properties": {
                    "duration_minutes": {
                        "type": "number",
                        "example": 10
                    },
                    "detection_mode": {
                        "enum": ["INTERVAL", "ONCE"],
                        "example": "INTERVAL"
                    },
                    "diffusion_option": {
                        "enum": ["MATCH_MOOD", "OPPOSITE_MOOD", "AUTO"],
                        "example": "MATCH_MOOD"
                    }
                }
            },
            "SerenBoxSessionServerData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SerenBoxSessionData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Session id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "serenBoxId": {
                                "type": "string",
                                "description": "SerenBox id",
                                "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                            },
                            "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Session start time",
                                "example": "2022-01-01T00:00:00.000Z"
                            },
                            "end_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Session end time",
                                "example": "2022-01-01T01:00:00.000Z"
                            },
                            "is_running": {
                                "type": "boolean",
                                "description": "Flag indicating if the session is currently running",
                                "example": true
                            }
                        }
                    }
                ]
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://serena-backend-2g6tjw7nja-et.a.run.app/",
            "description": "Cloud Run"
        },
        {
            "url": "http://localhost:8080",
            "description": "Local"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": ["Users"],
                "summary": "Register a new user",
                "description": "Store the accessToken and userId to be used for future authenticated requests. Authentication for secured API routes expects header of \"Authorization: Bearer {ACCESS_TOKEN}\".",
                "operationId": "registerUser",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "test"
                                    },
                                    "email": {
                                        "type": "string",
                                        "default": "test@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "12345678",
                                        "description": "Must be at least 8 characters long"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Multiple bad requests reasons: missing email/username/password, invalid password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing email": {
                                        "summary": "Missing email",
                                        "value": {
                                            "message": "Missing email",
                                            "status": 400
                                        }
                                    },
                                    "Missing username": {
                                        "summary": "Missing username",
                                        "value": {
                                            "message": "Missing username",
                                            "status": 400
                                        }
                                    },
                                    "Missing password": {
                                        "summary": "Missing password",
                                        "value": {
                                            "message": "Missing password",
                                            "status": 400
                                        }
                                    },
                                    "Password too short": {
                                        "summary": "Password too short",
                                        "value": {
                                            "message": "Password must be at least 8 characters long",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User already exists",
                                    "status": 409
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": ["Users"],
                "summary": "Login to an existing user",
                "description": "Store the accessToken and userId to be used for future authenticated requests. Authentication for secured API routes expects header of \"Authorization: Bearer {ACCESS_TOKEN}\".",
                "operationId": "login",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "default": "test@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "12345678",
                                        "description": "Must be at least 8 characters long"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing email/password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing email": {
                                        "summary": "Missing email",
                                        "value": {
                                            "message": "Missing email",
                                            "status": 400
                                        }
                                    },
                                    "Missing password": {
                                        "summary": "Missing password",
                                        "value": {
                                            "message": "Missing password",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong email/password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Wrong email/password",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get a user's data",
                "description": "Get a user's data",
                "operationId": "getUserData",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReturnedUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the user id in the path parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete a user",
                "description": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReturnedUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the user id in the path parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serenplace": {
            "get": {
                "security": [],
                "tags": ["SerenPlace"],
                "summary": "Get all products",
                "description": "Get all products",
                "operationId": "getSerenPlaceProducts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenPlaceProducts"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serenplace/{productId}": {
            "get": {
                "security": [],
                "tags": ["SerenPlace"],
                "summary": "Get a product's data",
                "description": "Get a product's data",
                "operationId": "getSerenPlaceProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenPlaceProduct"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Product not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/music-recommender": {
            "get": {
                "security": [],
                "tags": ["Music Recommender"],
                "summary": "Recommend music based on user's emotion",
                "description": "Get energetic and relax from `UserEmotion.energetic.total` or `UserEmotion.relax.total`. Energetic + relax cannot be more than 1",
                "operationId": "getRecommendations",
                "parameters": [
                    {
                        "name": "energetic",
                        "in": "query",
                        "description": "Energetic emotion",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "example": 0.7
                    },
                    {
                        "name": "relax",
                        "in": "query",
                        "description": "Relax emotion",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "example": 0.3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MusicRecommendations"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing energetic": {
                                        "summary": "Missing energetic",
                                        "value": {
                                            "message": "Missing energetic",
                                            "status": 400
                                        }
                                    },
                                    "Missing relax": {
                                        "summary": "Missing relax",
                                        "value": {
                                            "message": "Missing relax",
                                            "status": 400
                                        }
                                    },
                                    "Energetic + relax !== 1": {
                                        "summary": "Energetic + relax !== 1",
                                        "value": {
                                            "message": "Energetic + relax must be 1",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox": {
            "get": {
                "tags": ["SerenBox"],
                "summary": "Get a list of user's SerenBoxes",
                "description": "Get a list of user's SerenBoxes",
                "operationId": "getSerenBoxes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SerenBoxServerData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["SerenBox"],
                "summary": "Add a new SerenBox",
                "description": "Add a new SerenBox",
                "operationId": "addSerenBox",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SerenBoxData"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxServerData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing credentials": {
                                        "summary": "Missing credentials",
                                        "value": {
                                            "message": "Missing credentials",
                                            "status": 400
                                        }
                                    },
                                    "Missing name": {
                                        "summary": "Missing name",
                                        "value": {
                                            "message": "Missing name",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "SerenBox already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox already exists",
                                    "status": 409
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [],
                "tags": ["SerenBox"],
                "summary": "Update a SerenBox ip_address",
                "description": "Update a SerenBox ip_address",
                "operationId": "handlePatchSerenBoxIpAddress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "credentials": {
                                        "type": "string",
                                        "description": "SerenBox credentials",
                                        "example": "00:0a:95:9d:68:16"
                                    },
                                    "ip_address": {
                                        "type": "string",
                                        "description": "SerenBox IP address",
                                        "example": "192.0.31.34"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxServerData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing credentials": {
                                        "summary": "Missing credentials",
                                        "value": {
                                            "message": "Missing credentials",
                                            "status": 400
                                        }
                                    },
                                    "Missing ip_address": {
                                        "summary": "Missing ip_address",
                                        "value": {
                                            "message": "Missing ip_address",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["SerenBox"],
                "summary": "Get a SerenBox",
                "description": "Get a SerenBox",
                "operationId": "handleGetSerenBox",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["SerenBox"],
                "summary": "Delete a SerenBox",
                "description": "Delete a SerenBox",
                "operationId": "handleDeleteSerenBox",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}/status": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["SerenBox"],
                "summary": "Check if a SerenBox is connected to the server",
                "description": "Check if a SerenBox is connected to the server",
                "operationId": "handleVerifySerenBoxConnection",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "SerenBox unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox unavailable",
                                    "status": 503
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{credentials}/slots": {
            "parameters": [
                {
                    "name": "credentials",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "00:0a:95:9d:68:16"
                }
            ],
            "get": {
                "security": [],
                "tags": ["SerenBox Slot"],
                "summary": "Check a SerenBox's slots active status",
                "description": "Check a SerenBox's slots active status",
                "operationId": "handleGetSerenBoxSlotStatusByCredentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxSlotStatus"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}/slots/{slotOption}": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                },
                {
                    "name": "slotOption",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": ["A", "B"]
                    },
                    "example": "A"
                }
            ],
            "patch": {
                "tags": ["SerenBox Slot"],
                "summary": "Update a SerenBox diffuser slot state",
                "description": "Update a SerenBox diffuser slot state",
                "operationId": "handleChangeSerenBoxSlotStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_active": {
                                        "type": "string",
                                        "enum": [true, false]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxSlotStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Wrong slot option": {
                                        "summary": "Wrong slot option",
                                        "value": {
                                            "message": "Wrong slot option",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },

                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}/sessions": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                },
                {
                    "name": "sessionId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "post": {
                "tags": ["SerenBox Session"],
                "summary": "Create a SerenBox session",
                "description": "Create a SerenBox session",
                "operationId": "handleCreateSerenBoxSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SerenBoxSessionData"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxSessionServerData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing duration_minutes": {
                                        "summary": "Missing duration_minutes",
                                        "value": {
                                            "message": "Missing duration_minutes",
                                            "status": 400
                                        }
                                    },
                                    "Incorrect detection_mode": {
                                        "summary": "Incorrect detection_mode",
                                        "value": {
                                            "message": "Incorrect detection_mode",
                                            "status": 400
                                        }
                                    },
                                    "Incorrect diffusion_option": {
                                        "summary": "Incorrect diffusion_option",
                                        "value": {
                                            "message": "Incorrect diffusion_option",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SerenBox not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "SerenBox not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}/sessions/{sessionId}": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                },
                {
                    "name": "sessionId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["SerenBox Session"],
                "summary": "Get a SerenBox session",
                "description": "Get a SerenBox session",
                "operationId": "handleGetSerenBoxSession",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxSessionServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "SerenBox not found": {
                                        "summary": "SerenBox not found",
                                        "value": {
                                            "message": "SerenBox not found",
                                            "status": 404
                                        }
                                    },
                                    "SerenBox session not found": {
                                        "summary": "SerenBox session not found",
                                        "value": {
                                            "message": "SerenBox session not found",
                                            "status": 404
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/serenbox/{serenboxId}/sessions/{sessionId}/finish": {
            "parameters": [
                {
                    "name": "serenboxId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                },
                {
                    "name": "sessionId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["SerenBox Session"],
                "summary": "Finish a SerenBox session",
                "description": "Finish a SerenBox session",
                "operationId": "handleFinishSerenBoxSession",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SerenBoxSessionServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId in the SerenBox data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "SerenBox not found": {
                                        "summary": "SerenBox not found",
                                        "value": {
                                            "message": "SerenBox not found",
                                            "status": 404
                                        }
                                    },
                                    "SerenBox session not found": {
                                        "summary": "SerenBox session not found",
                                        "value": {
                                            "message": "SerenBox session not found",
                                            "status": 404
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/emotions": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["User Emotions"],
                "summary": "Get a list of user's emotions",
                "description": "Get a list of user's emotions",
                "operationId": "getUserEmotions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserEmotionServerData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/emotions/{emotionId}": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                },
                {
                    "name": "emotionId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "4e7a0743-f806-48cc-b62a-22a266fbc795"
                }
            ],
            "get": {
                "tags": ["User Emotions"],
                "summary": "Get a user's emotions",
                "description": "Get a user's emotions",
                "operationId": "getUserEmotion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserEmotionServerData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the userId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "User not found": {
                                        "summary": "User not found",
                                        "value": {
                                            "message": "User not found",
                                            "status": 404
                                        }
                                    },
                                    "Emotion result not found": {
                                        "summary": "Emotion result not found",
                                        "value": {
                                            "message": "Emotion result not found",
                                            "status": 404
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
