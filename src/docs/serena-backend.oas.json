{
    "openapi": "3.0.3",
    "info": {
        "title": "Serena Backend",
        "description": "Serena Backend API docs",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Get accessToken from register or login routes",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ReturnedUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "username": {
                        "type": "string",
                        "description": "User name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email"
                    }
                },
                "example": {
                    "id": "5f9e1b7b9b0b3e2b9c3f3b1a",
                    "username": "test",
                    "email": "test@gmail.com"
                }
            },
            "HttpError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Missing email"
                    },
                    "status": {
                        "type": "number",
                        "example": 400
                    }
                }
            },
            "SafeUserResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "JWT token to be used for further requests",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJhOTIxNTk2NC1lOGM3LTRkOTgtODI4ZC1mNGIxODU1OTE1ODciLCJpYXQiOjE3MDA2Njk5MjQsImV4cCI6MTcwMzI2MTkyNH0.uPe7Z3L27UW1356YeWrNnzzc8WQrBMAG59ePOzThX2I"
                    },
                    "userId": {
                        "type": "string",
                        "example": "5f9e1-b9b0b3e2b9c3f3b1a-5f9e1b7b9b0b31a"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local"
        },
        {
            "url": "https://serena-backend-2g6tjw7nja-et.a.run.app/",
            "description": "Cloud Run"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": ["Users"],
                "summary": "Register a new user",
                "description": "After a successful response, make sure to store the accessToken on Swagger's Authorize button to be able to make further requests on protected routes. You don't need to do this if you are still logged in on Swagger",
                "operationId": "registerUser",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "test"
                                    },
                                    "email": {
                                        "type": "string",
                                        "default": "test@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "12345678",
                                        "description": "Must be at least 8 characters long"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Multiple bad requests reasons: missing email/username/password, invalid password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing email": {
                                        "summary": "Missing email",
                                        "value": {
                                            "message": "Missing email",
                                            "status": 400
                                        }
                                    },
                                    "Missing username": {
                                        "summary": "Missing username",
                                        "value": {
                                            "message": "Missing username",
                                            "status": 400
                                        }
                                    },
                                    "Missing password": {
                                        "summary": "Missing password",
                                        "value": {
                                            "message": "Missing password",
                                            "status": 400
                                        }
                                    },
                                    "Password too short": {
                                        "summary": "Password too short",
                                        "value": {
                                            "message": "Password must be at least 8 characters long",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User already exists",
                                    "status": 409
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": ["Users"],
                "summary": "Login to an existing user",
                "description": "After a successful response, make sure to store the accessToken on Swagger's Authorize button to be able to make further requests on protected routes. You don't need to do this if you are still logged in on Swagger",
                "operationId": "login",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "default": "test@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "12345678",
                                        "description": "Must be at least 8 characters long"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing email/password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "examples": {
                                    "Missing email": {
                                        "summary": "Missing email",
                                        "value": {
                                            "message": "Missing email",
                                            "status": 400
                                        }
                                    },
                                    "Missing password": {
                                        "summary": "Missing password",
                                        "value": {
                                            "message": "Missing password",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong email/password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Wrong email/password",
                                    "status": 401
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get a user's data",
                "description": "Get a user's data",
                "operationId": "getUserData",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReturnedUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the user id in the path parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete a user",
                "description": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReturnedUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden when using a token that doesn't correspond to the user id in the path parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Forbidden",
                                    "status": 403
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "User not found",
                                    "status": 404
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError"
                                },
                                "example": {
                                    "message": "Invalid token",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
